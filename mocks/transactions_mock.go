// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/server/transactions/transactions.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	database "github.com/osodracnai/pismo-challenge/pkg/database"
)

// MockTransactionDatabase is a mock of TransactionDatabase interface.
type MockTransactionDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionDatabaseMockRecorder
}

// MockTransactionDatabaseMockRecorder is the mock recorder for MockTransactionDatabase.
type MockTransactionDatabaseMockRecorder struct {
	mock *MockTransactionDatabase
}

// NewMockTransactionDatabase creates a new mock instance.
func NewMockTransactionDatabase(ctrl *gomock.Controller) *MockTransactionDatabase {
	mock := &MockTransactionDatabase{ctrl: ctrl}
	mock.recorder = &MockTransactionDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionDatabase) EXPECT() *MockTransactionDatabaseMockRecorder {
	return m.recorder
}

// GetTransactionByID mocks base method.
func (m *MockTransactionDatabase) GetTransactionByID(ctx context.Context, id string) (*database.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionByID", ctx, id)
	ret0, _ := ret[0].(*database.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionByID indicates an expected call of GetTransactionByID.
func (mr *MockTransactionDatabaseMockRecorder) GetTransactionByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionByID", reflect.TypeOf((*MockTransactionDatabase)(nil).GetTransactionByID), ctx, id)
}

// InsertTransaction mocks base method.
func (m *MockTransactionDatabase) InsertTransaction(ctx context.Context, account database.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertTransaction", ctx, account)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertTransaction indicates an expected call of InsertTransaction.
func (mr *MockTransactionDatabaseMockRecorder) InsertTransaction(ctx, account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertTransaction", reflect.TypeOf((*MockTransactionDatabase)(nil).InsertTransaction), ctx, account)
}
